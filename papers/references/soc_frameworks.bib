% SoC design and evaluation frameworks

@ARTICLE{chipyard,
  author={Amid, Alon and Biancolin, David and Gonzalez, Abraham and Grubb, Daniel and Karandikar, Sagar and Liew, Harrison and Magyar, Albert and Mao, Howard and Ou, Albert and Pemberton, Nathan and Rigge, Paul and Schmidt, Colin and Wright, John and Zhao, Jerry and Shao, Yakun Sophia and Asanović, Krste and Nikolić, Borivoje},
  journal={IEEE Micro},
  title={Chipyard: Integrated Design, Simulation, and Implementation Framework for Custom SoCs},
  year={2020},
  volume={40},
  number={4},
  pages={10-21},
  doi={10.1109/MM.2020.2996616}
}

@inproceedings{open_esp,
  author = {Mantovani, Paolo and Giri, Davide and Di Guglielmo, Giuseppe and Piccolboni, Luca and Zuckerman, Joseph and Cota, Emilio G. and Petracca, Michele and Pilato, Christian and Carloni, Luca P.},
  title = {Agile SoC Development with Open ESP},
  year = {2020},
  isbn = {9781450380263},
  publisher = {Association for Computing Machinery},
  address = {New York, NY, USA},
  url = {https://doi.org/10.1145/3400302.3415753},
  doi = {10.1145/3400302.3415753},
  abstract = {ESP is an open-source research platform for heterogeneous SoC design. The platform combines a modular tile-based architecture with a variety of application-oriented flows for the design and optimization of accelerators. The ESP architecture is highly scalable and strikes a balance between regularity and specialization. The companion methodology raises the level of abstraction to system-level design and enables an automated flow from software and hardware development to full-system prototyping on FPGA. For application developers, ESP offers domain-specific automated solutions to synthesize new accelerators for their software and to map complex workloads onto the SoC architecture. For hardware engineers, ESP offers automated solutions to integrate their accelerator designs into the complete SoC. Conceived as a heterogeneous integration platform and tested through years of teaching at Columbia University, ESP supports the open-source hardware community by providing a flexible platform for agile SoC development.},
  booktitle = {Proceedings of the 39th International Conference on Computer-Aided Design},
  articleno = {96},
  numpages = {9},
  keywords = {system-level design, accelerators, SoC, network-on-chip},
  location = {Virtual Event, USA},
  series = {ICCAD '20}
}

@inproceedings{openpiton,
  author = {Balkind, Jonathan and McKeown, Michael and Fu, Yaosheng and Nguyen, Tri and Zhou, Yanqi and Lavrov, Alexey and Shahrad, Mohammad and Fuchs, Adi and Payne, Samuel and Liang, Xiaohua and Matl, Matthew and Wentzlaff, David},
  title = {OpenPiton: An Open Source Manycore Research Framework},
  year = {2016},
  isbn = {9781450340915},
  publisher = {Association for Computing Machinery},
  address = {New York, NY, USA},
  url = {https://doi.org/10.1145/2872362.2872414},
  doi = {10.1145/2872362.2872414},
  abstract = {Industry is building larger, more complex, manycore processors on the back of strong institutional knowledge, but academic projects face difficulties in replicating that scale. To alleviate these difficulties and to develop and share knowledge, the community needs open architecture frameworks for simulation, synthesis, and software exploration which support extensibility, scalability, and configurability, alongside an established base of verification tools and supported software. In this paper we present OpenPiton, an open source framework for building scalable architecture research prototypes from 1 core to 500 million cores. OpenPiton is the world's first open source, general-purpose, multithreaded manycore processor and framework. OpenPiton leverages the industry hardened OpenSPARC T1 core with modifications and builds upon it with a scratch-built, scalable uncore creating a flexible, modern manycore design. In addition, OpenPiton provides synthesis and backend scripts for ASIC and FPGA to enable other researchers to bring their designs to implementation. OpenPiton provides a complete verification infrastructure of over 8000 tests, is supported by mature software tools, runs full-stack multiuser Debian Linux, and is written in industry standard Verilog. Multiple implementations of OpenPiton have been created including a taped-out 25-core implementation in IBM's 32nm process and multiple Xilinx FPGA prototypes.},
  booktitle = {Proceedings of the Twenty-First International Conference on Architectural Support for Programming Languages and Operating Systems},
  pages = {217–232},
  numpages = {16},
  keywords = {manycore, open-source, multicore},
  location = {Atlanta, Georgia, USA},
  series = {ASPLOS '16}
}

@INPROCEEDINGS{xiangshan,
  author={Xu, Yinan and Yu, Zihao and Tang, Dan and Chen, Guokai and Chen, Lu and Gou, Lingrui and Jin, Yue and Li, Qianruo and Li, Xin and Li, Zuojun and Lin, Jiawei and Liu, Tong and Liu, Zhigang and Tan, Jiazhan and Wang, Huaqiang and Wang, Huizhe and Wang, Kaifan and Zhang, Chuanqi and Zhang, Fawang and Zhang, Linjuan and Zhang, Zifei and Zhao, Yangyang and Zhou, Yaoyang and Zhou, Yike and Zou, Jiangrui and Cai, Ye and Huan, Dandan and Li, Zusong and Zhao, Jiye and Chen, Zihao and He, Wei and Quan, Qiyuan and Liu, Xingwu and Wang, Sa and Shi, Kan and Sun, Ninghui and Bao, Yungang},
  booktitle={2022 55th IEEE/ACM International Symposium on Microarchitecture (MICRO)},
  title={Towards Developing High Performance RISC-V Processors Using Agile Methodology},
  year={2022},
  volume={},
  number={},
  pages={1178-1199},
  doi={10.1109/MICRO56248.2022.00080}
}

@ARTICLE{pulpv2,
  author={Rossi, Davide and Pullini, Antonio and Loi, Igor and Gautschi, Michael and Gürkaynak, Frank Kağan and Teman, Adam and Constantin, Jeremy and Burg, Andreas and Miro-Panades, Ivan and Beignè, Edith and Clermidy, Fabien and Flatresse, Philippe and Benini, Luca},
  journal={IEEE Micro},
  title={Energy-Efficient Near-Threshold Parallel Computing: The PULPv2 Cluster},
  year={2017},
  volume={37},
  number={5},
  pages={20-31},
  doi={10.1109/MM.2017.3711645}
}
